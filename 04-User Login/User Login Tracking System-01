# User Login Tracking System
# Function to get the date of an event
def get_event_date(event):
    return event.date  # Return the date attribute of the event object

# Function to track current users logged into each machine
def current_users(events):
    # Sort events based on their dates
    events.sort(key=get_event_date)
    
    machines = {}  # Dictionary to hold sets of users for each machine
    
    # Iterate through each event
    for event in events:
        # If the machine is not already in the dictionary, add it with an empty set
        if event.machine not in machines:
            machines[event.machine] = set()
        
        # If the event is a login, add the user to the machine's set
        if event.type == "login":
            machines[event.machine].add(event.user)
        # If the event is a logout, remove the user from the machine's set
        elif event.type == "logout":
            machines[event.machine].remove(event.user)
    
    return machines  # Return the dictionary of machines with current users

# Function to generate a report of the current users on each machine
def generate_report(machines):
    # Iterate through each machine and its set of users
    for machine, users in machines.items():
        # If there are any users currently logged in
        if len(users) > 0:
            # Join the users into a comma-separated string
            user_list = ", ".join(users)
            # Print the machine and the list of users
            print("{}: {}".format(machine, user_list))

# Class to represent an event
class Event:
    def __init__(self, event_date, event_type, machine_name, user):
        self.date = event_date  # The date and time of the event
        self.type = event_type  # The type of event (login or logout)
        self.machine = machine_name  # The name of the machine involved in the event
        self.user = user  # The user involved in the event

# Example usage
events = [
    Event("2024-07-21 10:00", "login", "machine1", "Alice"),
    Event("2024-07-21 10:05", "login", "machine1", "Bob"),
    Event("2024-07-21 10:20", "logout", "machine1", "Alice"),
    Event("2024-07-21 10:25", "login", "machine2", "Charlie"),
    Event("2024-07-21 10:30", "logout", "machine1", "Bob"),
]

# Process the events to track current users
machines = current_users(events)

# Generate and print the report of current users
generate_report(machines)
